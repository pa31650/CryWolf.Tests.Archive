// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using API.Models.v1;
//
//    var passwordPolicy = PasswordPolicy.FromJson(jsonString);

namespace API.Models.v1
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class PasswordPolicy
    {
        [JsonProperty("daysToExpire", NullValueHandling = NullValueHandling.Ignore)]
        public long? DaysToExpire { get; set; }

        [JsonProperty("minimumLength", NullValueHandling = NullValueHandling.Ignore)]
        public long? MinimumLength { get; set; }

        [JsonProperty("minimumMinimumLowerCaseCharacters", NullValueHandling = NullValueHandling.Ignore)]
        public long? MinimumMinimumLowerCaseCharacters { get; set; }

        [JsonProperty("minimumUpperCaseCharacters", NullValueHandling = NullValueHandling.Ignore)]
        public long? MinimumUpperCaseCharacters { get; set; }

        [JsonProperty("minimumNumericCharacters", NullValueHandling = NullValueHandling.Ignore)]
        public long? MinimumNumericCharacters { get; set; }

        [JsonProperty("minimumSpecialCharacters", NullValueHandling = NullValueHandling.Ignore)]
        public long? MinimumSpecialCharacters { get; set; }

        [JsonProperty("specialCharactersAllowed", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> SpecialCharactersAllowed { get; set; }
    }

    public partial class PasswordPolicy
    {
        public static PasswordPolicy FromJson(string json) => JsonConvert.DeserializeObject<PasswordPolicy>(json, API.Models.v1.Converter.Settings);
    }
}
