// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using API.Models.v1;
//
//    var settings = Settings.FromJson(jsonString);

namespace API.Models.v1
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Settings : CryWolf
    {
        [JsonProperty("paymentTypes", NullValueHandling = NullValueHandling.Ignore)]
        public List<PaymentType> PaymentTypes { get; set; }

        [JsonProperty("category", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> Category { get; set; }

        [JsonProperty("subCategory", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> SubCategory { get; set; }

        [JsonProperty("postPaymentLetters", NullValueHandling = NullValueHandling.Ignore)]
        public List<PostPaymentLetter> PostPaymentLetters { get; set; }

        [JsonProperty("settableAlarmRegistrationStatuses", NullValueHandling = NullValueHandling.Ignore)]
        public List<PostPaymentLetter> SettableAlarmRegistrationStatuses { get; set; }

        [JsonProperty("settableAlarmCompanyStatuses", NullValueHandling = NullValueHandling.Ignore)]
        public List<PostPaymentLetter> SettableAlarmCompanyStatuses { get; set; }
    }

    public partial class PaymentType
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public long? Id { get; set; }

        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }
    }

    public partial class PostPaymentLetter
    {
        [JsonProperty("agency", NullValueHandling = NullValueHandling.Ignore)]
        public string Agency { get; set; }

        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("additionalCharge", NullValueHandling = NullValueHandling.Ignore)]
        public long? AdditionalCharge { get; set; }
    }

    //public enum Agency { Default };

    public partial class Settings
    {
        public static Settings FromJson(string json) => JsonConvert.DeserializeObject<Settings>(json, API.Models.v1.Converter.Settings);
    }

    //public static class Serialize
    //{
    //    public static string ToJson(this Settings self) => JsonConvert.SerializeObject(self, API.Models.v1.Converter.Settings);
    //}

    //internal static class Converter
    //{
    //    public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
    //    {
    //        MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
    //        DateParseHandling = DateParseHandling.None,
    //        Converters =
    //        {
    //            AgencyConverter.Singleton,
    //            new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
    //        },
    //    };
    //}

    //internal class AgencyConverter : JsonConverter
    //{
        //public override bool CanConvert(Type t) => t == typeof(Agency) || t == typeof(Agency?);

        //public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        //{
        //    if (reader.TokenType == JsonToken.Null) return null;
        //    var value = serializer.Deserialize<string>(reader);
        //    if (value == "<Default>")
        //    {
        //        return Agency.Default;
        //    }
        //    throw new Exception("Cannot unmarshal type Agency");
        //}

        //public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        //{
        //    if (untypedValue == null)
        //    {
        //        serializer.Serialize(writer, null);
        //        return;
        //    }
        //    var value = (Agency)untypedValue;
        //    if (value == Agency.Default)
        //    {
        //        serializer.Serialize(writer, "<Default>");
        //        return;
        //    }
        //    throw new Exception("Cannot marshal type Agency");
        //}

    //    public static readonly AgencyConverter Singleton = new AgencyConverter();
    //}
}
