// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using API.Models.v1;
//
//    var fromCad = FromCad.FromJson(jsonString);

namespace API.Models.v1
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class FromCad : CryWolf
    {
        [JsonProperty("caseNumber", NullValueHandling = NullValueHandling.Ignore)]
        public string CaseNumber { get; set; }

        [JsonProperty("incidentDateTime", NullValueHandling = NullValueHandling.Ignore)]
        public DateTime? IncidentDateTime { get; set; }

        [JsonProperty("accountNumber", NullValueHandling = NullValueHandling.Ignore)]
        public string AccountNumber { get; set; }

        [JsonProperty("alarmType", NullValueHandling = NullValueHandling.Ignore)]
        public string AlarmType { get; set; }

        [JsonProperty("apartmentNumber", NullValueHandling = NullValueHandling.Ignore)]
        public string ApartmentNumber { get; set; }

        [JsonProperty("beatNumber", NullValueHandling = NullValueHandling.Ignore)]
        public string BeatNumber { get; set; }

        [JsonProperty("cadAlarmCompanyName", NullValueHandling = NullValueHandling.Ignore)]
        public string CadAlarmCompanyName { get; set; }

        [JsonProperty("cadAlarmCompanyPhone", NullValueHandling = NullValueHandling.Ignore)]
        public string CadAlarmCompanyPhone { get; set; }

        [JsonProperty("callerName", NullValueHandling = NullValueHandling.Ignore)]
        public string CallerName { get; set; }

        [JsonProperty("callTakerInformation", NullValueHandling = NullValueHandling.Ignore)]
        public string CallTakerInformation { get; set; }

        [JsonProperty("clearanceCode", NullValueHandling = NullValueHandling.Ignore)]
        public string ClearanceCode { get; set; }

        [JsonProperty("dispatchCode", NullValueHandling = NullValueHandling.Ignore)]
        public string DispatchCode { get; set; }

        [JsonProperty("dispatcherInformation", NullValueHandling = NullValueHandling.Ignore)]
        public string DispatcherInformation { get; set; }

        [JsonProperty("dispatchComments", NullValueHandling = NullValueHandling.Ignore)]
        public string DispatchComments { get; set; }

        [JsonProperty("extra1", NullValueHandling = NullValueHandling.Ignore)]
        public string Extra1 { get; set; }

        [JsonProperty("extra2", NullValueHandling = NullValueHandling.Ignore)]
        public string Extra2 { get; set; }

        [JsonProperty("extra3", NullValueHandling = NullValueHandling.Ignore)]
        public string Extra3 { get; set; }

        [JsonProperty("extra4", NullValueHandling = NullValueHandling.Ignore)]
        public string Extra4 { get; set; }

        [JsonProperty("extra5", NullValueHandling = NullValueHandling.Ignore)]
        public string Extra5 { get; set; }

        [JsonProperty("extra6", NullValueHandling = NullValueHandling.Ignore)]
        public string Extra6 { get; set; }

        [JsonProperty("extra7", NullValueHandling = NullValueHandling.Ignore)]
        public string Extra7 { get; set; }

        [JsonProperty("extra8", NullValueHandling = NullValueHandling.Ignore)]
        public string Extra8 { get; set; }

        [JsonProperty("streetNumber", NullValueHandling = NullValueHandling.Ignore)]
        public string StreetNumber { get; set; }

        [JsonProperty("streetName", NullValueHandling = NullValueHandling.Ignore)]
        public string StreetName { get; set; }

        [JsonProperty("city", NullValueHandling = NullValueHandling.Ignore)]
        public string City { get; set; }

        [JsonProperty("stateAddress", NullValueHandling = NullValueHandling.Ignore)]
        public string StateAddress { get; set; }

        [JsonProperty("postalCode", NullValueHandling = NullValueHandling.Ignore)]
        public string PostalCode { get; set; }

        [JsonProperty("officerComments", NullValueHandling = NullValueHandling.Ignore)]
        public string OfficerComments { get; set; }

        [JsonProperty("officerId", NullValueHandling = NullValueHandling.Ignore)]
        public string OfficerId { get; set; }

        [JsonProperty("timeCallReceived", NullValueHandling = NullValueHandling.Ignore)]
        public DateTime? TimeCallReceived { get; set; }

        [JsonProperty("timeDispatched", NullValueHandling = NullValueHandling.Ignore)]
        public DateTime? TimeDispatched { get; set; }

        [JsonProperty("timeOnScene", NullValueHandling = NullValueHandling.Ignore)]
        public DateTime? TimeOnScene { get; set; }

        [JsonProperty("timeCleared", NullValueHandling = NullValueHandling.Ignore)]
        public DateTime? TimeCleared { get; set; }

        [JsonProperty("unitsAssigned", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> UnitsAssigned { get; set; }
    }

    public partial class FromCad
    {
        public static List<FromCad> FromJson(string json) => JsonConvert.DeserializeObject<List<FromCad>>(json, API.Models.v1.Converter.Settings);
    }
}
