// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using API.Models.v1;
//
//    var transferBody = TransferBody.FromJson(jsonString);

namespace API.Models.v1
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class TransferBody
    {
        [JsonProperty("sourceAccountType", NullValueHandling = NullValueHandling.Ignore)]
        public string SourceAccountType { get; set; }

        [JsonProperty("sourceAccountNumber", NullValueHandling = NullValueHandling.Ignore)]
        public string SourceAccountNumber { get; set; }

        [JsonProperty("destinationAccountType", NullValueHandling = NullValueHandling.Ignore)]
        public string DestinationAccountType { get; set; }

        [JsonProperty("destinationAccountNumber", NullValueHandling = NullValueHandling.Ignore)]
        public string DestinationAccountNumber { get; set; }

        [JsonProperty("amountToTransfer", NullValueHandling = NullValueHandling.Ignore)]
        public int AmountToTransfer { get; set; }
    }

    public partial class TransferBody
    {
        public static TransferBody FromJson(string json) => JsonConvert.DeserializeObject<TransferBody>(json, API.Models.v1.Converter.Settings);

        public TransferBody(
            string sourceAccountType, string sourceAccountNumber, 
            string destinationAccountType, string destinationAccountNumber, 
            int amountToTransfer)
        {
            this.SourceAccountType = sourceAccountType;
            this.SourceAccountNumber = sourceAccountNumber;
            this.DestinationAccountType = destinationAccountType;
            this.DestinationAccountNumber = destinationAccountNumber;
            this.AmountToTransfer = amountToTransfer;
        }
    }
      

    //public static class Serialize
    //{
    //    public static string ToJson(this TransferBody self) => JsonConvert.SerializeObject(self, API.Models.v1.Converter.Settings);
    //}

    //internal static class Converter
    //{
    //    public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
    //    {
    //        MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
    //        DateParseHandling = DateParseHandling.None,
    //        Converters =
    //        {
    //            new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
    //        },
    //    };
    //}
}
