// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using API.Models.v1;
//
//    var payments = Payments.FromJson(jsonString);

namespace API.Models.v1
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Payments : CryWolf
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public long? Id { get; set; }

        [JsonProperty("invoiceId", NullValueHandling = NullValueHandling.Ignore)]
        public long? InvoiceId { get; set; }

        [JsonProperty("agency", NullValueHandling = NullValueHandling.Ignore)]
        public string Agency { get; set; }

        [JsonProperty("accountType", NullValueHandling = NullValueHandling.Ignore)]
        public AccountType AccountType { get; set; }

        [JsonProperty("accountNumber", NullValueHandling = NullValueHandling.Ignore)]
        public string AccountNumber { get; set; }

        [JsonProperty("paymentType", NullValueHandling = NullValueHandling.Ignore)]
        public string PaymentType { get; set; }

        [JsonProperty("amount", NullValueHandling = NullValueHandling.Ignore)]
        public long? Amount { get; set; }

        [JsonProperty("checkNumber", NullValueHandling = NullValueHandling.Ignore)]
        public string CheckNumber { get; set; }

        [JsonProperty("paymentMethod", NullValueHandling = NullValueHandling.Ignore)]
        public string PaymentMethod { get; set; }

        [JsonProperty("comments", NullValueHandling = NullValueHandling.Ignore)]
        public string Comments { get; set; }

        [JsonProperty("createdBy", NullValueHandling = NullValueHandling.Ignore)]
        public string CreatedBy { get; set; }

        [JsonProperty("createdOn", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? CreatedOn { get; set; }

        [JsonProperty("initialAmountDue", NullValueHandling = NullValueHandling.Ignore)]
        public long? InitialAmountDue { get; set; }
    }

    //public partial class AccountType
    //{
    //    [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
    //    public long? Id { get; set; }

    //    [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
    //    public string Name { get; set; }
    //}

    public partial class Payments
    {
        public static List<Payments> FromJson(string json) => JsonConvert.DeserializeObject<List<Payments>>(json, API.Models.v1.Converter.Settings);
    }

    //public static class Serialize
    //{
    //    public static string ToJson(this List<Payments> self) => JsonConvert.SerializeObject(self, API.Models.v1.Converter.Settings);
    //}

    //internal static class Converter
    //{
    //    public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
    //    {
    //        MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
    //        DateParseHandling = DateParseHandling.None,
    //        Converters =
    //        {
    //            new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
    //        },
    //    };
    //}
}
